@page "/"

<h5 >Tennis ScoreBoard</h5>

<h2>@Score()</h2>



@if (!APlayerWonMatchWithTwoMoreSetWins() || !APlayerWonMatchAfterThreeSetWins())
{
	<div>
		<button class="btn btn-primary m-2" onclick="@PlayerAWinsAPoint">A</button>
		<button class="btn btn-primary m-2" onclick="@PlayerBWinsAPoint">B</button>
	</div>
}


<div>
	<button class="btn btn-danger m-4" onclick="@Reset">Reset</button>
</div>



@code
{
	public string Score()
	{

		if (APlayerWonWithoutGameGoingIntoDouce() || APlayerWonAfterGameWentIntoDouce())
		{
			PlayerWithMostPoints().Games++;

			if (APlayerWonSetAfterSixGameWinsWithTwoOrMoreGameWins() || APlayerWonSetAfterTieBreak())
			{
				PlayerWithMostGameWinsDuringASet().Sets++;

				if (APlayerWonMatchWithTwoMoreSetWins() || APlayerWonMatchAfterThreeSetWins())
				{
					return $"{PlayerWithMostSetWins().Name} is the winner";
				}

				ResetPoints();
				ResetGames();
				return $"Player A: SET:{PlayerA.Sets} GAME:{PlayerA.Games} POINT: {PlayerA.Points} ---  Player B: SET:{PlayerB.Sets} GAME:{PlayerB.Games} POINT: {PlayerB.Points}";
			}

			ResetPoints();
			return $"Player A: SET:{PlayerA.Sets} GAME:{PlayerA.Games} POINT: LOVE  ---  Player B: SET:{PlayerB.Sets} GAME:{PlayerB.Games} POINT: LOVE";
		}

		if (IsItDouce())
		{
			return $"Player A: SET:{PlayerA.Sets} GAME:{PlayerA.Games} POINT: 40 - Deuce -  Player B: SET:{PlayerB.Sets} GAME:{PlayerB.Games} POINT: 40";
		}

		if (APlayerHasAdvantage())
		{
			return $"Player A: SET:{PlayerA.Sets} GAME:{PlayerA.Games} POINT: 40 - {PlayerWithMostPoints().Name} has Advantage  -  Player B: SET:{PlayerB.Sets} GAME:{PlayerB.Games} POINT: 40";
		}

		return $"Player A: SET:{PlayerA.Sets} GAME:{PlayerA.Games} POINT: {ScoreTypes[PlayerA.Points]}  ---  Player B: SET:{PlayerB.Sets} GAME:{PlayerB.Games} POINT: {ScoreTypes[PlayerB.Points]}";
	}

}